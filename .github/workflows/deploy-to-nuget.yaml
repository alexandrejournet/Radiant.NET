name: Build and deploy to Nuget
on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Show branch name
        run: echo ${{ github.ref_name }}

      - name: Extract tag
        id: extract_tag
        run: echo "::set-output name=TAG::$(echo ${GITHUB_REF#refs/tags/})"

      - name: Update AssemblyInformationalVersion
        run: |
          TAG=${{ steps.extract_tag.outputs.TAG }}
          sed -i "s/<AssemblyInformationalVersion>.*<\/AssemblyInformationalVersion>/<AssemblyInformationalVersion>${TAG}<\/AssemblyInformationalVersion>/" $GITHUB_WORKSPACE/Directory.Build.targets
          sed -i "s/<Version>.*<\/Version>/<Version>${TAG}<\/Version>/" $GITHUB_WORKSPACE/Directory.Build.targets

      - name: Show Directory.Build.targets
        run: cat $GITHUB_WORKSPACE/Directory.Build.targets

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Install dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build -c RELEASE

      - name: Find NuGet packages
        run: |
          find $GITHUB_WORKSPACE -type d -name "Release" -exec find {} -type f -name "*.nupkg" \;
          packages=$(find $GITHUB_WORKSPACE -type d -name "Release" -exec find {} -type f -name "*.nupkg" \;)
          echo "$packages" > packages.txt

      - name: Push NuGet packages
        run: |
          while IFS= read -r package; do
            echo "START - Push to nuget: $package"
            dotnet nuget push "$package" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
            echo "END - Push to nuget: $package"
          done < packages.txt
